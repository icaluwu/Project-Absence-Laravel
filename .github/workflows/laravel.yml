name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.2', '8.3' ]

    env:
      # Default env guardrails (bisa dioverride per-step bila perlu)
      COMPOSER_PROCESS_TIMEOUT: 0
      COMPOSER_NO_INTERACTION: 1
      COMPOSER_NO_AUDIT: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, dom, sqlite3, pdo_sqlite, zip
          coverage: none
          tools: composer:v2
          ini-file: production

      - name: Determine Composer cache dir
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php${{ matrix.php }}-composer-

      - name: Install dependencies
        run: composer install --no-progress --no-interaction --prefer-dist

      # Penting: pastikan setiap perintah Artisan memakai konfigurasi testing yang tidak menyentuh MySQL.
      - name: Prepare environment (SQLite in-memory, no external deps)
        env:
          APP_ENV: testing
          APP_DEBUG: false
          # Database → SQLite in-memory
          DB_CONNECTION: sqlite
          DB_DATABASE: ':memory:'
          # Cache/Session/Queue → in-memory/inline
          CACHE_STORE: array
          CACHE_DRIVER: array
          SESSION_DRIVER: array
          QUEUE_CONNECTION: sync
          # Mail, filesystems, dsb boleh default
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php artisan key:generate --ansi
          # Clear config & cache tetap aman karena store=array
          php artisan config:clear
          php artisan cache:clear

      - name: Run tests
        env:
          APP_ENV: testing
          DB_CONNECTION: sqlite
          DB_DATABASE: ':memory:'
          CACHE_STORE: array
          CACHE_DRIVER: array
          SESSION_DRIVER: array
          QUEUE_CONNECTION: sync
        run: |
          # Jika ada script "test" di composer.json → pakai itu,
          # kalau tidak ada → fallback ke artisan test
          if composer run -l | grep -qE ' test(:|$)'; then
            composer test
          else
            php artisan test --env=testing
          fi
